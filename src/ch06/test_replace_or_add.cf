#######################################################
#
# Test replace_or_add()
#
#######################################################

body common control
{
        inputs => { "../../default.cf.sub",   
                    "../../../../masterfiles/cfengine_stdlib.cf"   
                  };
        bundlesequence  => { default("$(this.promise_filename)") };   
        version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
      "states" slist => { "actual", "expected" };   

      "actual" string =>   
      "BEGIN
line1 plus more text
END";

      "expected" string =>
      "BEGIN
new line 1
END
new line 2";

  files:
      "$(G.testfile).$(states)"   
        create => "true",
        edit_line => init_insert("$(init.$(states))"),
        edit_defaults => init_empty;
}

bundle edit_line init_insert(str)   
{
  insert_lines:
      "$(str)";
}

body edit_defaults init_empty
{
        empty_file_before_editing => "true";
}

#######################################################

bundle agent test
{
  vars:
      "tpat1" string => "line1.*";    
      "tstr1" string => "new line 1";
      "tpat2" string => "line2.*";
      "tstr2" string => "new line 2";

  files:
      "$(G.testfile).actual"   
        create => "false",
        edit_line => replace_or_add("$(test.tpat1)", "$(test.tstr1)");
      "$(G.testfile).actual"
        create => "false",
        edit_line => replace_or_add("$(test.tpat2)", "$(test.tstr2)");
}

#######################################################

bundle agent check
{
  methods:
      "any" usebundle => default_check_diff("$(G.testfile).actual",
                                            "$(G.testfile).expected",
                                            "$(this.promise_filename)");
}
